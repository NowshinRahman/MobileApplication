{"ast":null,"code":"var _jsxFileName = \"/Users/nowshinrahman/Desktop/MobileApplication/Week3/Day5/comp-lib-start/src/components/Modal.js\",\n  _s = $RefreshSig$();\nimport ReactDOM from 'react-dom';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Modal(props) {\n  _s();\n  const {\n    onClose,\n    children,\n    actionBar\n  } = props;\n  /*\n  useEffect(()=>{},[])\n  this is the useEffect hook from React\n  useEffect fires every time the component is mounted /aka create in the dom\n  the first argument is an arrow function that we want to fire\n  the second argument is an array of pieces of state we want to watch for a changem \n  when they change useEffect's arrowfunction fires\n  if you only want it to fire when its created, the second argument is and empty array []\n  */\n  useEffect(() => {\n    document.body.classList.add('overflow-hidden');\n  }, []);\n  return /*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: onClose,\n      className: \"absolute inset-0 bg-gray-300 opacity-50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sbsolute inset-40 p-10 bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col justify-between h-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row justify-end\",\n          children: actionBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true), document.getElementById('portal'));\n}\n_s(Modal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["ReactDOM","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","props","_s","onClose","children","actionBar","document","body","classList","add","createPortal","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","getElementById","_c","$RefreshReg$"],"sources":["/Users/nowshinrahman/Desktop/MobileApplication/Week3/Day5/comp-lib-start/src/components/Modal.js"],"sourcesContent":["import ReactDOM from 'react-dom'\nimport { useEffect } from 'react'   \n\nexport default function Modal(props){\n    const {onClose, children, actionBar} = props\n    /*\n    useEffect(()=>{},[])\n    this is the useEffect hook from React\n    useEffect fires every time the component is mounted /aka create in the dom\n    the first argument is an arrow function that we want to fire\n    the second argument is an array of pieces of state we want to watch for a changem \n    when they change useEffect's arrowfunction fires\n    if you only want it to fire when its created, the second argument is and empty array []\n    */\n    useEffect(()=>{\n        document.body.classList.add('overflow-hidden')\n    },[])\n\n    return ReactDOM.createPortal(\n        <>\n        {/* Overlay */}\n        <div \n            onClick= {onClose} \n            className='absolute inset-0 bg-gray-300 opacity-50'>\n        </div>\n        \n        {/* Modal BG */}\n        <div className= \"sbsolute inset-40 p-10 bg-white\">\n            {/* Modal Content */}\n            <div className=\"flex flex-col justify-between h-full\">\n                {/* Children Text */}\n                <div>{children}</div>\n                {/* Action Bar */}\n                <div className=\"flex flex-row justify-end\">{actionBar}</div>\n            </div>\n        </div>\n\n        </>,\n        document.getElementById('portal')\n    )\n}\n\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,WAAW;AAChC,SAASC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,KAAKA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAChC,MAAM;IAACC,OAAO;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGJ,KAAK;EAC5C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIN,SAAS,CAAC,MAAI;IACVW,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAClD,CAAC,EAAC,EAAE,CAAC;EAEL,oBAAOf,QAAQ,CAACgB,YAAY,cACxBb,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBAEAP,OAAA;MACIc,OAAO,EAAGR,OAAQ;MAClBS,SAAS,EAAC;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAGNnB,OAAA;MAAKe,SAAS,EAAE,iCAAiC;MAAAR,QAAA,eAE7CP,OAAA;QAAKe,SAAS,EAAC,sCAAsC;QAAAR,QAAA,gBAEjDP,OAAA;UAAAO,QAAA,EAAMA;QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAErBnB,OAAA;UAAKe,SAAS,EAAC,2BAA2B;UAAAR,QAAA,EAAEC;QAAS;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eAEJ,CAAC,EACHV,QAAQ,CAACW,cAAc,CAAC,QAAQ,CACpC,CAAC;AACL;AAACf,EAAA,CArCuBF,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}